maver@LAPTOP-J4VHBM7H MINGW64 ~
$ git
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

maver@LAPTOP-J4VHBM7H MINGW64 ~
$ ls
 -1.14-windows.xml
'01. Getting started.ipynb'
'02. Strings.ipynb'
'03. Data structures.ipynb'
'04. Loops.ipynb'
'05. Conditionals.ipynb'
'06. Functions.ipynb'
'07. Packages.ipynb'
'08. Plotting.ipynb'
'09. Julia is fast.ipynb'
'10. Multiple dispatch.ipynb'
'10.1 Multiple dispatch.ipynb'
'11. Basic linear algebra.ipynb'
'12. Factorizations and other fun.ipynb'
'3D Objects'/
 AppData/
'Application Data'@
 Contacts/
 Cookies@
 Covid19_DataAnalysis.ipynb
 Desktop/
 Documents/
 Downloads/
 Favorites/
 IntelGraphicsProfiles/
 Links/
'Local Settings'@
 MicrosoftEdgeBackups/
 Music/
'My Documents'@
 NTUSER.DAT
 NTUSER.DAT{1c2b59c5-c5f5-11eb-bacb-000d3a96488e}.TxR.0.regtrans-ms
 NTUSER.DAT{1c2b59c5-c5f5-11eb-bacb-000d3a96488e}.TxR.1.regtrans-ms
 NTUSER.DAT{1c2b59c5-c5f5-11eb-bacb-000d3a96488e}.TxR.2.regtrans-ms
 NTUSER.DAT{1c2b59c5-c5f5-11eb-bacb-000d3a96488e}.TxR.blf
 NTUSER.DAT{1c2b59c6-c5f5-11eb-bacb-000d3a96488e}.TM.blf
 NTUSER.DAT{1c2b59c6-c5f5-11eb-bacb-000d3a96488e}.TMContainer00000000000000000001.regtrans-ms
 NTUSER.DAT{1c2b59c6-c5f5-11eb-bacb-000d3a96488e}.TMContainer00000000000000000002.regtrans-ms
 NetHood@
 NumpyTut.ipynb
 OneDrive/
 Pictures/
 PrintHood@
 Recent@
'Saved Games'/
 Searches/
 SendTo@
'Start Menu'@
 Templates@
 Untitled.ipynb
 Untitled1.ipynb
 Videos/
 anaconda3/
 ansel/
 eclipse/
 eclipse-workspace/
 my_module_universalFuntions.ipynb
 ntuser.dat.LOG1
 ntuser.dat.LOG2
 ntuser.ini
 pythonstart-Copy1.ipynb
 pythonstart.ipynb
 venv/

maver@LAPTOP-J4VHBM7H MINGW64 ~
$ desktop/ls
bash: desktop/ls: No such file or directory

maver@LAPTOP-J4VHBM7H MINGW64 ~
$ desktop//ls
bash: desktop//ls: No such file or directory

maver@LAPTOP-J4VHBM7H MINGW64 ~
$ mkdir C:\\Users\\maver\\Desktop\\CODE\\GitTutorialsKK

maver@LAPTOP-J4VHBM7H MINGW64 ~
$ cd C:\\Users\\maver\\Desktop\\CODE\\GitTutorialsKK

maver@LAPTOP-J4VHBM7H MINGW64 ~/Desktop/CODE/GitTutorialsKK
$ ls

maver@LAPTOP-J4VHBM7H MINGW64 ~/Desktop/CODE/GitTutorialsKK
$ git init
Initialized empty Git repository in C:/Users/maver/Desktop/CODE/GitTutorialsKK/.git/

maver@LAPTOP-J4VHBM7H MINGW64 ~/Desktop/CODE/GitTutorialsKK (master)
$ ls -a
./  ../  .git/

maver@LAPTOP-J4VHBM7H MINGW64 ~/Desktop/CODE/GitTutorialsKK (master)
$ ls .git
HEAD  config  description  hooks/  info/  objects/  refs/

maver@LAPTOP-J4VHBM7H MINGW64 ~/Desktop/CODE/GitTutorialsKK (master)
$ touch names.txt

maver@LAPTOP-J4VHBM7H MINGW64 ~/Desktop/CODE/GitTutorialsKK (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        names.txt

nothing added to commit but untracked files present (use "git add" to track)

maver@LAPTOP-J4VHBM7H MINGW64 ~/Desktop/CODE/GitTutorialsKK (master)
$ git add names.txt

maver@LAPTOP-J4VHBM7H MINGW64 ~/Desktop/CODE/GitTutorialsKK (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   names.txt


maver@LAPTOP-J4VHBM7H MINGW64 ~/Desktop/CODE/GitTutorialsKK (master)
$ git commit -m " names.txt file added "
[master (root-commit) c608499]  names.txt file added
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 names.txt

maver@LAPTOP-J4VHBM7H MINGW64 ~/Desktop/CODE/GitTutorialsKK (master)
$  git status
On branch master
nothing to commit, working tree clean

maver@LAPTOP-J4VHBM7H MINGW64 ~/Desktop/CODE/GitTutorialsKK (master)
$
